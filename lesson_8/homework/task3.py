"""
3. Создайте собственный класс-исключение, который должен проверять содержимое
списка на наличие только чисел. Проверить работу исключения на реальном примере.
необходимо запрашивать у пользователя данные и заполнять список. Класс-исключение
должен контролировать типы данных элементов списка.

Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно,
пока пользователь сам не остановит работу скрипта, введя, например, команду “stop”.
При этом скрипт завершается, сформированный список выводится на экран.
Подсказка: для данного задания примем, что пользователь может вводить только
числа и строки. При вводе пользователем очередного элемента необходимо реализовать
проверку типа элемента и вносить его в список, только если введено число.
Класс-исключение должен не позволить пользователю ввести текст (не число)
и отобразить соответствующее сообщение. При этом работа скрипта не должна завершаться.
"""


class NotANumberError(Exception):
    pass


def get_number():
    text = input('Введите число (stop для останова):')
    if text == 'stop':
        return None
    if not text.isnumeric():
        raise NotANumberError
    return int(text)


result = []
while True:
    try:
        number = get_number()
        if number is None:
            break
        result.append(number)
    except NotANumberError:
        print('это не число')

print(result)
